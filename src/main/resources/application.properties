spring.application.name=taskmanagement_backend

# MySQL Database Configuration
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/db_taskmanagement}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:data.sql
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.access-token.expiration=${JWT_ACCESS_TOKEN_EXPIRATION:900000}
jwt.refresh-token.expiration=${JWT_REFRESH_TOKEN_EXPIRATION:2592000000}

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:http://localhost:8080/api/auth/google/callback}

# Application URLs
app.frontend.url=${FRONTEND_URL:http://localhost:3000}
app.backend.url=${BACKEND_URL:http://localhost:8080}

# Redis Configuration (for refresh tokens)
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}

# Organization Auto-Creation (OAuth2)
app.oauth.auto-create-organization=${APP_OAUTH_AUTO_CREATE_ORGANIZATION:true}
app.oauth.auto-create-exclude-public-domains=${APP_OAUTH_AUTO_CREATE_EXCLUDE_PUBLIC_DOMAINS:true}

# Token Management Configuration
app.token.cleanup.enabled=${TOKEN_CLEANUP_ENABLED:true}
app.token.max-per-user=${TOKEN_MAX_PER_USER:5}
app.token.retention-days=${TOKEN_RETENTION_DAYS:30}
